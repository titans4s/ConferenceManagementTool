var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _toConsumableArray = require("@babel/runtime/helpers/esm/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _paper = require("../Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
var _capitalize = require("../utils/capitalize");
var _capitalizeDefault = parcelHelpers.interopDefault(_capitalize);
var _linearProgress = require("../LinearProgress");
var _linearProgressDefault = parcelHelpers.interopDefault(_linearProgress);
var styles = function styles1(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'flex',
            flexDirection: 'row',
            justifyContent: 'space-between',
            alignItems: 'center',
            background: theme.palette.background.default,
            padding: 8
        },
        /* Styles applied to the root element if `position="bottom"`. */ positionBottom: {
            position: 'fixed',
            bottom: 0,
            left: 0,
            right: 0,
            zIndex: theme.zIndex.mobileStepper
        },
        /* Styles applied to the root element if `position="top"`. */ positionTop: {
            position: 'fixed',
            top: 0,
            left: 0,
            right: 0,
            zIndex: theme.zIndex.mobileStepper
        },
        /* Styles applied to the root element if `position="static"`. */ positionStatic: {
        },
        /* Styles applied to the dots container if `variant="dots"`. */ dots: {
            display: 'flex',
            flexDirection: 'row'
        },
        /* Styles applied to each dot if `variant="dots"`. */ dot: {
            backgroundColor: theme.palette.action.disabled,
            borderRadius: '50%',
            width: 8,
            height: 8,
            margin: '0 2px'
        },
        /* Styles applied to a dot if `variant="dots"` and this is the active step. */ dotActive: {
            backgroundColor: theme.palette.primary.main
        },
        /* Styles applied to the Linear Progress component if `variant="progress"`. */ progress: {
            width: '50%'
        }
    };
};
var MobileStepper = /*#__PURE__*/ _react.forwardRef(function MobileStepper1(props, ref) {
    var _props$activeStep = props.activeStep, activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep, backButton = props.backButton, classes = props.classes, className = props.className, LinearProgressProps = props.LinearProgressProps, nextButton = props.nextButton, _props$position = props.position, position = _props$position === void 0 ? 'bottom' : _props$position, steps = props.steps, _props$variant = props.variant, variant = _props$variant === void 0 ? 'dots' : _props$variant, other = _objectWithoutPropertiesDefault.default(props, [
        "activeStep",
        "backButton",
        "classes",
        "className",
        "LinearProgressProps",
        "nextButton",
        "position",
        "steps",
        "variant"
    ]);
    return(/*#__PURE__*/ _react.createElement(_paperDefault.default, _extendsDefault.default({
        square: true,
        elevation: 0,
        className: _clsxDefault.default(classes.root, classes["position".concat(_capitalizeDefault.default(position))], className),
        ref: ref
    }, other), backButton, variant === 'text' && /*#__PURE__*/ _react.createElement(_react.Fragment, null, activeStep + 1, " / ", steps), variant === 'dots' && /*#__PURE__*/ _react.createElement("div", {
        className: classes.dots
    }, _toConsumableArrayDefault.default(new Array(steps)).map(function(_, index) {
        return(/*#__PURE__*/ _react.createElement("div", {
            key: index,
            className: _clsxDefault.default(classes.dot, index === activeStep && classes.dotActive)
        }));
    })), variant === 'progress' && /*#__PURE__*/ _react.createElement(_linearProgressDefault.default, _extendsDefault.default({
        className: classes.progress,
        variant: "determinate",
        value: Math.ceil(activeStep / (steps - 1) * 100)
    }, LinearProgressProps)), nextButton));
});
MobileStepper.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * Set the active step (zero based index).
   * Defines which dot is highlighted when the variant is 'dots'.
   */ activeStep: _propTypesDefault.default.number,
    /**
   * A back button element. For instance, it can be a `Button` or an `IconButton`.
   */ backButton: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * Props applied to the `LinearProgress` element.
   */ LinearProgressProps: _propTypesDefault.default.object,
    /**
   * A next button element. For instance, it can be a `Button` or an `IconButton`.
   */ nextButton: _propTypesDefault.default.node,
    /**
   * Set the positioning type.
   */ position: _propTypesDefault.default.oneOf([
        'bottom',
        'static',
        'top'
    ]),
    /**
   * The total steps.
   */ steps: _propTypesDefault.default.number.isRequired,
    /**
   * The variant to use.
   */ variant: _propTypesDefault.default.oneOf([
        'dots',
        'progress',
        'text'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiMobileStepper'
})(MobileStepper);
