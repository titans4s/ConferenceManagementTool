var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _keyboardArrowLeft = require("../internal/svg-icons/KeyboardArrowLeft");
var _keyboardArrowLeftDefault = parcelHelpers.interopDefault(_keyboardArrowLeft);
var _keyboardArrowRight = require("../internal/svg-icons/KeyboardArrowRight");
var _keyboardArrowRightDefault = parcelHelpers.interopDefault(_keyboardArrowRight);
var _useTheme = require("../styles/useTheme");
var _useThemeDefault = parcelHelpers.interopDefault(_useTheme);
var _iconButton = require("../IconButton");
var _iconButtonDefault = parcelHelpers.interopDefault(_iconButton);
/**
 * @ignore - internal component.
 */ var _ref = /*#__PURE__*/ _react.createElement(_keyboardArrowRightDefault.default, null);
var _ref2 = /*#__PURE__*/ _react.createElement(_keyboardArrowLeftDefault.default, null);
var _ref3 = /*#__PURE__*/ _react.createElement(_keyboardArrowLeftDefault.default, null);
var _ref4 = /*#__PURE__*/ _react.createElement(_keyboardArrowRightDefault.default, null);
var TablePaginationActions = /*#__PURE__*/ _react.forwardRef(function TablePaginationActions1(props, ref) {
    var backIconButtonProps = props.backIconButtonProps, count = props.count, nextIconButtonProps = props.nextIconButtonProps, onChangePage = props.onChangePage, page = props.page, rowsPerPage = props.rowsPerPage, other = _objectWithoutPropertiesDefault.default(props, [
        "backIconButtonProps",
        "count",
        "nextIconButtonProps",
        "onChangePage",
        "page",
        "rowsPerPage"
    ]);
    var theme = _useThemeDefault.default();
    var handleBackButtonClick = function handleBackButtonClick1(event) {
        onChangePage(event, page - 1);
    };
    var handleNextButtonClick = function handleNextButtonClick1(event) {
        onChangePage(event, page + 1);
    };
    return(/*#__PURE__*/ _react.createElement("div", _extendsDefault.default({
        ref: ref
    }, other), /*#__PURE__*/ _react.createElement(_iconButtonDefault.default, _extendsDefault.default({
        onClick: handleBackButtonClick,
        disabled: page === 0,
        color: "inherit"
    }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/ _react.createElement(_iconButtonDefault.default, _extendsDefault.default({
        onClick: handleNextButtonClick,
        disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,
        color: "inherit"
    }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4)));
});
TablePaginationActions.propTypes = {
    /**
   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.
   */ backIconButtonProps: _propTypesDefault.default.object,
    /**
   * The total number of rows.
   */ count: _propTypesDefault.default.number.isRequired,
    /**
   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.
   */ nextIconButtonProps: _propTypesDefault.default.object,
    /**
   * Callback fired when the page is changed.
   *
   * @param {object} event The event source of the callback.
   * @param {number} page The page selected.
   */ onChangePage: _propTypesDefault.default.func.isRequired,
    /**
   * The zero-based index of the current page.
   */ page: _propTypesDefault.default.number.isRequired,
    /**
   * The number of rows per page.
   */ rowsPerPage: _propTypesDefault.default.number.isRequired
};
exports.default = TablePaginationActions;
