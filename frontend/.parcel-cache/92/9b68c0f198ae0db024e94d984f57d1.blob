var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _paper = require("../Paper");
var _paperDefault = parcelHelpers.interopDefault(_paper);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = {
    /* Styles applied to the root element. */ root: {
        overflow: 'hidden'
    }
};
var Card = /*#__PURE__*/ _react.forwardRef(function Card1(props, ref) {
    var classes = props.classes, className = props.className, _props$raised = props.raised, raised = _props$raised === void 0 ? false : _props$raised, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "raised"
    ]);
    return(/*#__PURE__*/ _react.createElement(_paperDefault.default, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className),
        elevation: raised ? 8 : 1,
        ref: ref
    }, other)));
});
Card.propTypes = {
    // ----------------------------- Warning --------------------------------
    // | These PropTypes are generated from the TypeScript type definitions |
    // |     To update them edit the d.ts file and run "yarn proptypes"     |
    // ----------------------------------------------------------------------
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * If `true`, the card will use raised styling.
   */ raised: _propTypesDefault.default.bool
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiCard'
})(Card);
