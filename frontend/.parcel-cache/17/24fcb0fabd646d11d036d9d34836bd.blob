var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _withWidth = require("../withWidth");
var _withWidthDefault = parcelHelpers.interopDefault(_withWidth);
/**
 * Dialog will responsively be full screen *at or below* the given breakpoint
 * (defaults to 'sm' for mobile devices).
 * Notice that this Higher-order Component is incompatible with server-side rendering.
 */ var withMobileDialog = function withMobileDialog1() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    };
    return function(Component) {
        var _options$breakpoint = options.breakpoint, breakpoint = _options$breakpoint === void 0 ? 'sm' : _options$breakpoint;
        function WithMobileDialog(props) {
            return(/*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
                fullScreen: _withWidth.isWidthDown(breakpoint, props.width)
            }, props)));
        }
        WithMobileDialog.propTypes = {
            width: _propTypesDefault.default.oneOf([
                'xs',
                'sm',
                'md',
                'lg',
                'xl'
            ]).isRequired
        };
        return _withWidthDefault.default()(WithMobileDialog);
    };
};
exports.default = withMobileDialog;
