var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _listItem = require("../ListItem");
var _listItemDefault = parcelHelpers.interopDefault(_listItem);
var styles = function styles1(theme) {
    return {
        /* Styles applied to the root element. */ root: _extendsDefault.default({
        }, theme.typography.body1, _definePropertyDefault.default({
            minHeight: 48,
            paddingTop: 6,
            paddingBottom: 6,
            boxSizing: 'border-box',
            width: 'auto',
            overflow: 'hidden',
            whiteSpace: 'nowrap'
        }, theme.breakpoints.up('sm'), {
            minHeight: 'auto'
        })),
        // TODO v5: remove
        /* Styles applied to the root element if `disableGutters={false}`. */ gutters: {
        },
        /* Styles applied to the root element if `selected={true}`. */ selected: {
        },
        /* Styles applied to the root element if dense. */ dense: _extendsDefault.default({
        }, theme.typography.body2, {
            minHeight: 'auto'
        })
    };
};
var MenuItem = /*#__PURE__*/ _react.forwardRef(function MenuItem1(props, ref) {
    var classes = props.classes, className = props.className, _props$component = props.component, component = _props$component === void 0 ? 'li' : _props$component, _props$disableGutters = props.disableGutters, disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters, ListItemClasses = props.ListItemClasses, _props$role = props.role, role = _props$role === void 0 ? 'menuitem' : _props$role, selected = props.selected, tabIndexProp = props.tabIndex, other = _objectWithoutPropertiesDefault.default(props, [
        "classes",
        "className",
        "component",
        "disableGutters",
        "ListItemClasses",
        "role",
        "selected",
        "tabIndex"
    ]);
    var tabIndex;
    if (!props.disabled) tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;
    return(/*#__PURE__*/ _react.createElement(_listItemDefault.default, _extendsDefault.default({
        button: true,
        role: role,
        tabIndex: tabIndex,
        component: component,
        selected: selected,
        disableGutters: disableGutters,
        classes: _extendsDefault.default({
            dense: classes.dense
        }, ListItemClasses),
        className: _clsxDefault.default(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),
        ref: ref
    }, other)));
});
MenuItem.propTypes = {
    /**
   * Menu item contents.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.
   */ dense: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ disabled: _propTypesDefault.default.bool,
    /**
   * If `true`, the left and right padding is removed.
   */ disableGutters: _propTypesDefault.default.bool,
    /**
   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.
   */ ListItemClasses: _propTypesDefault.default.object,
    /**
   * @ignore
   */ role: _propTypesDefault.default.string,
    /**
   * @ignore
   */ selected: _propTypesDefault.default.bool,
    /**
   * @ignore
   */ tabIndex: _propTypesDefault.default.number
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiMenuItem'
})(MenuItem);
