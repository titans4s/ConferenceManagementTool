var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/esm/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var _listContext = require("./ListContext");
var _listContextDefault = parcelHelpers.interopDefault(_listContext);
var styles = {
    /* Styles applied to the root element. */ root: {
        listStyle: 'none',
        margin: 0,
        padding: 0,
        position: 'relative'
    },
    /* Styles applied to the root element if `disablePadding={false}`. */ padding: {
        paddingTop: 8,
        paddingBottom: 8
    },
    /* Styles applied to the root element if dense. */ dense: {
    },
    /* Styles applied to the root element if a `subheader` is provided. */ subheader: {
        paddingTop: 0
    }
};
var List = /*#__PURE__*/ _react.forwardRef(function List1(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'ul' : _props$component, _props$dense = props.dense, dense = _props$dense === void 0 ? false : _props$dense, _props$disablePadding = props.disablePadding, disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding, subheader = props.subheader, other = _objectWithoutPropertiesDefault.default(props, [
        "children",
        "classes",
        "className",
        "component",
        "dense",
        "disablePadding",
        "subheader"
    ]);
    var context = _react.useMemo(function() {
        return {
            dense: dense
        };
    }, [
        dense
    ]);
    return(/*#__PURE__*/ _react.createElement(_listContextDefault.default.Provider, {
        value: context
    }, /*#__PURE__*/ _react.createElement(Component, _extendsDefault.default({
        className: _clsxDefault.default(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),
        ref: ref
    }, other), subheader, children)));
});
List.propTypes = {
    /**
   * The content of the component.
   */ children: _propTypesDefault.default.node,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * @ignore
   */ className: _propTypesDefault.default.string,
    /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */ component: _propTypesDefault.default/* @typescript-to-proptypes-ignore */ .elementType,
    /**
   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   */ dense: _propTypesDefault.default.bool,
    /**
   * If `true`, vertical padding will be removed from the list.
   */ disablePadding: _propTypesDefault.default.bool,
    /**
   * The content of the subheader, normally `ListSubheader`.
   */ subheader: _propTypesDefault.default.node
};
exports.default = _withStylesDefault.default(styles, {
    name: 'MuiList'
})(List);
