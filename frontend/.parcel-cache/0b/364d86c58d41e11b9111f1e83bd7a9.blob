var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styles", ()=>styles
);
var _react = require("react");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _clsx = require("clsx");
var _clsxDefault = parcelHelpers.interopDefault(_clsx);
var _radioButtonUnchecked = require("../internal/svg-icons/RadioButtonUnchecked");
var _radioButtonUncheckedDefault = parcelHelpers.interopDefault(_radioButtonUnchecked);
var _radioButtonChecked = require("../internal/svg-icons/RadioButtonChecked");
var _radioButtonCheckedDefault = parcelHelpers.interopDefault(_radioButtonChecked);
var _withStyles = require("../styles/withStyles");
var _withStylesDefault = parcelHelpers.interopDefault(_withStyles);
var styles = function styles1(theme) {
    return {
        root: {
            position: 'relative',
            display: 'flex',
            '&$checked $layer': {
                transform: 'scale(1)',
                transition: theme.transitions.create('transform', {
                    easing: theme.transitions.easing.easeOut,
                    duration: theme.transitions.duration.shortest
                })
            }
        },
        layer: {
            left: 0,
            position: 'absolute',
            transform: 'scale(0)',
            transition: theme.transitions.create('transform', {
                easing: theme.transitions.easing.easeIn,
                duration: theme.transitions.duration.shortest
            })
        },
        checked: {
        }
    };
};
/**
 * @ignore - internal component.
 */ function RadioButtonIcon(props) {
    var checked = props.checked, classes = props.classes, fontSize = props.fontSize;
    return(/*#__PURE__*/ _react.createElement("div", {
        className: _clsxDefault.default(classes.root, checked && classes.checked)
    }, /*#__PURE__*/ _react.createElement(_radioButtonUncheckedDefault.default, {
        fontSize: fontSize
    }), /*#__PURE__*/ _react.createElement(_radioButtonCheckedDefault.default, {
        fontSize: fontSize,
        className: classes.layer
    })));
}
RadioButtonIcon.propTypes = {
    /**
   * If `true`, the component is checked.
   */ checked: _propTypesDefault.default.bool,
    /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */ classes: _propTypesDefault.default.object.isRequired,
    /**
   * The size of the radio.
   * `small` is equivalent to the dense radio styling.
   */ fontSize: _propTypesDefault.default.oneOf([
        'small',
        'default'
    ])
};
exports.default = _withStylesDefault.default(styles, {
    name: 'PrivateRadioButtonIcon'
})(RadioButtonIcon);
